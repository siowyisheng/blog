{"version":3,"file":"component---src-templates-blog-post-js-2cc7d031dc5112720041.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/logo.png","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n// import { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  // const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {/* <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      /> */}\r\n      {author?.name && (\r\n        <p>\r\n          Written and maintained by <strong>{author.name}</strong>{\" \"}\r\n          {author?.summary || null}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","export default __webpack_public_path__ + \"static/logo-52067bca885c06b3f69bb34a8f1679ac.png\";","import Link from \"gatsby-link\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport logo from \"./logo.png\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n        logoImage: imageSharp(id: { regex: \"/logo/\" }) {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"1.45rem 1.0875rem\",\r\n          }}\r\n        >\r\n          <header>\r\n            <Link to=\"/\">\r\n              <img\r\n                style={{ margin: `0 10px 0 0`, verticalAlign: `-40%` }}\r\n                width={40}\r\n                src={logo}\r\n                alt=\"Logo\"\r\n              />\r\n            </Link>\r\n            <h2 style={{ display: `inline` }}>\r\n              <Link\r\n                to=\"/life/\"\r\n                style={{ color: `#ff2268` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Life,\r\n              </Link>\r\n              <Link\r\n                to=\"/design/\"\r\n                style={{ color: `#e86013` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Design,\r\n              </Link>\r\n              <Link\r\n                to=\"/games/\"\r\n                style={{ color: `#8213e8` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Games,\r\n              </Link>\r\n              <Link\r\n                to=\"/code/\"\r\n                style={{ color: `#2269ff` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Code\r\n              </Link>\r\n            </h2>\r\n          </header>\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"0px 1.0875rem 1.45rem\",\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.func,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ‚Üê {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} ‚Üí\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","children","StaticQuery","query","render","data","style","margin","maxWidth","padding","to","verticalAlign","width","src","logo","alt","display","color","activeStyle","textDecoration","paddingTop","Seo","description","title","lang","metaDescription","defaultTitle","content","property","social","twitter","defaultProps","Head","post","markdownRemark","frontmatter","excerpt","previous","next","location","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","Link","fields","slug","rel"],"sourceRoot":""}