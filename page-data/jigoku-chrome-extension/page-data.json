{"componentChunkName":"component---src-templates-blog-post-js","path":"/jigoku-chrome-extension/","result":{"data":{"site":{"siteMetadata":{"title":"Life Design Games Code"}},"markdownRemark":{"id":"9b46d140-5fc6-5ea8-a1d9-e86ce17fadc2","excerpt":"I recently wrote my first chrome extension, Jigoku Game Log. Jigoku Jigoku is an excellent online implementation of the excellent card game Legend of the Fiveâ€¦","html":"<p>I recently wrote my first chrome extension, <a href=\"https://chrome.google.com/webstore/detail/jigoku-game-log/cofpncfeggiibpickflljahgmhabgkeg\">Jigoku Game Log</a>.</p>\n<h4>Jigoku</h4>\n<p>Jigoku is an excellent online implementation of the excellent card game <a href=\"https://www.fantasyflightgames.com/en/products/legend-of-the-five-rings-the-card-game/\">Legend of the Five Rings</a>. Game events are logged as messages in a chat area in a corner of the page, together with any chat between the players. No game replays are saved.</p>\n<h4>Jigoku Game Log</h4>\n<p>Jigoku Game Log goes into the DOM to extract the game events, omits superfluous information like chat messages, summarises and formats important information, and then sends this newly-produced game log to <a href=\"https://markdownshare.com\">markdownshare.com</a> to be saved for sharing and saving, for either analysis or sharing war stories with comrades.</p>\n<h4>Challenges</h4>\n<p>Using <code class=\"language-text\">const</code> and <code class=\"language-text\">let</code> gave me errors, so I used <code class=\"language-text\">var</code> throughout. I guess this might be because the script is constantly ongoing and doesnâ€™t get garbage collected.</p>\n<p>Submitting the game log to markdownshare.com through the fetch API was difficult.</p>\n<p>First, Chrome doesnâ€™t allow fetch API from most areas in the extension. It needs to be done in the <code class=\"language-text\">background.js</code>, so <strong>message passing</strong> needs to be used to get the fetch request to <code class=\"language-text\">background.js</code>.</p>\n<p>Second, I had issues with permissions, with my request not getting sent, with no informative error logs. Turns out, there are several places to add the cross-origin site permissions to.</p>\n<p>Third, the API usage example on markdownshare.com showed the use of cURL. What I didnâ€™t realise, what that cURL automatically sends the message with <code class=\"language-text\">ContentType:application/x-www-form-urlencoded</code> when using the <code class=\"language-text\">-d</code> option, so I needed to specify this manually with <code class=\"language-text\">fetch</code> and I also needed to do <code class=\"language-text\">encodeURIComponent()</code> on the text.</p>\n<h4>Results</h4>\n<p>More than 10 users in the L5R community are using the extension ðŸ˜Š.</p>","frontmatter":{"title":"I Wrote the Jigoku Game Log Chrome Extension","date":"December 05, 2019","description":null}},"previous":{"fields":{"slug":"/material-ui-usage-wip/"},"frontmatter":{"title":"Working on Material UI usage page"}},"next":{"fields":{"slug":"/writing-vscode-extensions/"},"frontmatter":{"title":"Writing VSCode Extensions"}}},"pageContext":{"id":"9b46d140-5fc6-5ea8-a1d9-e86ce17fadc2","previousPostId":"ec16ee70-d74b-5940-9a0e-ad052d1071c9","nextPostId":"169d1a9c-43eb-53a6-a01a-3b4a1a17a739"}},"staticQueryHashes":["1126892257","2841359383","3257411868"]}