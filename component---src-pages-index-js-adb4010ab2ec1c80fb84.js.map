{"version":3,"file":"component---src-pages-index-js-adb4010ab2ec1c80fb84.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/logo.png","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n// import { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  // const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {/* <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      /> */}\r\n      {author?.name && (\r\n        <p>\r\n          Written and maintained by <strong>{author.name}</strong>{\" \"}\r\n          {author?.summary || null}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","export default __webpack_public_path__ + \"static/logo-52067bca885c06b3f69bb34a8f1679ac.png\";","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport logo from \"./logo.png\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n        logoImage: imageSharp(id: { regex: \"/logo/\" }) {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"1.45rem 1.0875rem\",\r\n          }}\r\n        >\r\n          <header>\r\n            <Link to=\"/\">\r\n              <img\r\n                style={{ margin: `0 10px 0 0`, verticalAlign: `-40%` }}\r\n                width={40}\r\n                src={logo}\r\n                alt=\"Logo\"\r\n              />\r\n            </Link>\r\n            <h2 style={{ display: `inline` }}>\r\n              <Link\r\n                to=\"/life/\"\r\n                style={{ color: `#ff2268` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Life,\r\n              </Link>\r\n              <Link\r\n                to=\"/design/\"\r\n                style={{ color: `#e86013` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Design,\r\n              </Link>\r\n              <Link\r\n                to=\"/games/\"\r\n                style={{ color: `#8213e8` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Games,\r\n              </Link>\r\n              <Link\r\n                to=\"/code/\"\r\n                style={{ color: `#2269ff` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Code\r\n              </Link>\r\n            </h2>\r\n          </header>\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"0px 1.0875rem 1.45rem\",\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.func,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h6 style={{ marginBottom: 0, color: \"#999\" }}>\r\n                    {post.frontmatter.date}\r\n                  </h6>\r\n                  <h3 style={{ marginTop: 0 }}>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h3>\r\n                </header>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n      <Bio />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","children","StaticQuery","query","render","data","style","margin","maxWidth","padding","Link","to","verticalAlign","width","src","logo","alt","display","color","activeStyle","textDecoration","paddingTop","Seo","description","title","lang","metaDescription","defaultTitle","content","property","social","twitter","defaultProps","location","posts","allMarkdownRemark","nodes","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","marginBottom","date","marginTop","itemProp","Head"],"sourceRoot":""}