{"version":3,"file":"component---src-pages-404-js-798224c7714c01699297.js","mappings":"uLAAA,EAAe,IAA0B,mDC2FzC,EAtFe,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OACb,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAcLC,OAAQ,SAAAC,GAAI,OACV,2BACE,uBACEC,MAAO,CACLC,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGX,8BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KACP,uBACEC,MAAK,OACLN,MAAO,CAAEC,OAAO,aAAeM,cAAc,QAC7CC,MAAO,GACPC,IAAKC,EACLC,IAAI,UAGR,sBAAIL,MAAK,MAASN,MAAO,CAAEY,QAAQ,WACjC,gBAAC,EAAAR,KAAD,CACEC,GAAG,SACHL,MAAO,CAAEa,MAAM,WACfC,YAAa,CAAEC,eAAe,uBAHhC,SAOA,gBAAC,EAAAX,KAAD,CACEC,GAAG,WACHL,MAAO,CAAEa,MAAM,WACfC,YAAa,CAAEC,eAAe,uBAHhC,WAOA,gBAAC,EAAAX,KAAD,CACEC,GAAG,UACHL,MAAO,CAAEa,MAAM,WACfC,YAAa,CAAEC,eAAe,uBAHhC,UAOA,gBAAC,EAAAX,KAAD,CACEC,GAAG,SACHL,MAAO,CAAEa,MAAM,WACfC,YAAa,CAAEC,eAAe,uBAHhC,WAUN,uBACEf,MAAO,CACLC,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTa,WAAY,IAGbrB,GA3DK,GAhBD,C,+CCMTsB,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBC,GAAsB,EAA5BC,KAA4B,EAAtBD,OAAOxB,EAAe,EAAfA,SAC/B0B,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAN,MAAiBM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAAS,UAAAN,EAAKG,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,KAEX,wBAAMJ,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzC5B,EAGN,EAEDsB,EAAIc,aAAe,CACjBb,YAAY,IAQd,K,kGC1Cac,EAAO,kBAAM,gBAAC,IAAD,CAAKb,MAAM,kBAAjB,EAEpB,UAbqB,SAAC,GAAuB,IAArBpB,EAAqB,EAArBA,KAAMkC,EAAe,EAAfA,SACtBC,EAAYnC,EAAKsB,KAAKG,aAAaL,MAEzC,OACE,gBAAC,IAAD,CAAQc,SAAUA,EAAUd,MAAOe,GACjC,4CACA,oFAGL,C","sources":["webpack://gatsby-starter-blog/./src/components/logo.png","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/logo-52067bca885c06b3f69bb34a8f1679ac.png\";","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport logo from \"./logo.png\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n        logoImage: imageSharp(id: { regex: \"/logo/\" }) {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"1.45rem 1.0875rem\",\r\n          }}\r\n        >\r\n          <header>\r\n            <Link to=\"/\">\r\n              <img\r\n                class={`logo`}\r\n                style={{ margin: `0 10px 0 0`, verticalAlign: `-40%` }}\r\n                width={40}\r\n                src={logo}\r\n                alt=\"Logo\"\r\n              />\r\n            </Link>\r\n            <h2 class={`nav`} style={{ display: `inline` }}>\r\n              <Link\r\n                to=\"/life/\"\r\n                style={{ color: `#ff2268` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Life,\r\n              </Link>\r\n              <Link\r\n                to=\"/design/\"\r\n                style={{ color: `#e86013` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Design,\r\n              </Link>\r\n              <Link\r\n                to=\"/games/\"\r\n                style={{ color: `#8213e8` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Games,\r\n              </Link>\r\n              <Link\r\n                to=\"/code/\"\r\n                style={{ color: `#2269ff` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Code\r\n              </Link>\r\n            </h2>\r\n          </header>\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"0px 1.0875rem 1.45rem\",\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.func,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["children","StaticQuery","query","render","data","style","margin","maxWidth","padding","Link","to","class","verticalAlign","width","src","logo","alt","display","color","activeStyle","textDecoration","paddingTop","Seo","description","title","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Head","location","siteTitle"],"sourceRoot":""}