{"version":3,"file":"component---src-pages-using-typescript-tsx-0fa8fe66a7d076fcb7bb.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/logo.png","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/logo-52067bca885c06b3f69bb34a8f1679ac.png\";","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport logo from \"./logo.png\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n        logoImage: imageSharp(id: { regex: \"/logo/\" }) {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"1.45rem 1.0875rem\",\r\n          }}\r\n        >\r\n          <header>\r\n            <Link to=\"/\">\r\n              <img\r\n                style={{ margin: `0 10px 0 0`, verticalAlign: `-40%` }}\r\n                width={40}\r\n                src={logo}\r\n                alt=\"Logo\"\r\n              />\r\n            </Link>\r\n            <h2 class={`nav`} style={{ display: `inline` }}>\r\n              <Link\r\n                to=\"/life/\"\r\n                style={{ color: `#ff2268` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Life,\r\n              </Link>\r\n              <Link\r\n                to=\"/design/\"\r\n                style={{ color: `#e86013` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Design,\r\n              </Link>\r\n              <Link\r\n                to=\"/games/\"\r\n                style={{ color: `#8213e8` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Games,\r\n              </Link>\r\n              <Link\r\n                to=\"/code/\"\r\n                style={{ color: `#2269ff` }}\r\n                activeStyle={{ textDecoration: `underline overline` }}\r\n              >\r\n                Code\r\n              </Link>\r\n            </h2>\r\n          </header>\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            maxWidth: 960,\r\n            padding: \"0px 1.0875rem 1.45rem\",\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.func,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","data","path","location","Layout","site","buildTime","href","Link","to","children","StaticQuery","query","render","style","margin","maxWidth","padding","verticalAlign","width","src","logo","alt","class","display","color","activeStyle","textDecoration","paddingTop","description","lang","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}